import { ProductSpotInterface } from "./product/productDescription";
import { lowestPrices } from "./product/productInfo";
import { StocksInterface } from "./types";
export interface cartInterface {
  activeSalesEventId: number;
  allocateAgainstWholesale: number;
  allocatedAgainst4thWareHouse: number;
  allocatedAgainst4thWarehouseStock: number;
  allocatedAgainstDGWarehouse: number;
  allocatedAgainstImpaired: number;
  allocatedAgainstInstock: number;
  allocatedAgainstTertiary: number;
  allocatedAgainstWholeSaleImpairedStock: number;
  allocatedAgainstWholeSaleTertiaryStock: number;
  asLowAs: lowestPrices[];
  askDollars1: number;
  askDollars2: number;
  askDollars3: number;
  askDollars4: number;
  askDollars5: number;
  backOrderDiscountDivisor: number;
  backOrderWholeSalePremium: number;
  backorderPlanQty: number;
  backorderSoldQty: number;
  ceiling_Premium: number;
  childs: [];
  currentPrimaryStock: number;
  currentSecondaryStock: number;
  currentStockInHand: number;
  currentTertiaryStock: number;
  customerId: number;
  dgWareHouseStock: number;
  discount: number;
  discountType: string;
  dummyInventoryReduction: number;
  expectedShipByDate: string;
  expectedShipmentDate: string;
  fixedPrice: number;
  floor_Premium: number;
  fourthWareHouseShipmentDate: string | number;
  fourthWareHouseStock: number;
  imagePath: string;
  impairedDiscount: number;
  instockExpectedShipmentDateRange: string;
  isActive: boolean;
  isChild: boolean;
  isClearanceProduct: boolean;
  isGrouped: boolean;
  isImpairedQty: number;
  isPreSale: boolean;
  metal: string;
  metalId: number;
  ounces: number;
  parentProductId: number | string;
  price: number;
  priceType: number;
  primaryStockUpdateTS: string;
  productId: number;
  productInventorySource: string;
  productName: string;
  productType? :string;
  productNameWithHypen: string;
  qtyPlanned: number;
  qtySold: number;
  quantity: number;
  salesEventName: string;
  salesExpiryDate: string;
  secondaryStockUpdateTS: string;
  shoppingCartId: number;
  sku: string | null;
  status: string | null;
  size:number
  taxCode: string | null;
  taxStatus: string | null;
  tertiaryDummyInventoryReduction: number;
  tertiaryStockUpdateTS: string;
  tier1Max: number;
  tier1Min: number;
  tier2Max: number;
  tier2Min: number;
  tier3Max: number;
  tier3Min: number;
  tier4Max: number;
  tier4Min: number;
  tier5Max: number;
  tier5Min: number;
  wholeSale4thWarehouseStock: number;
  wholeSaleImapairedStock: number;
  wholeSalePremium: number;
  wholeSaleStock: number;
  wholeSaleTertiaryStock: number;
  wholeSaleUpdateTS: string | null;
  wholesaleFixedPriceDiscount: number;
  wholesaleImpairedDiscount: number;
  wholesaleTier1: number;
  selected: boolean;
  stocks: StocksInterface[];
  totalPrice: number;
  tax?: any;
  spot: ProductSpotInterface;
}
export interface cartResponse {
  activeSalesEventId: number;
  allocateAgainstWholesale: number;
  allocatedAgainst4thWareHouse: number;
  allocatedAgainst4thWarehouseStock: number;
  allocatedAgainstDGWarehouse: number;
  allocatedAgainstImpaired: number;
  allocatedAgainstInstock: number;
  allocatedAgainstTertiary: number;
  allocatedAgainstWholeSaleImpairedStock: number;
  allocatedAgainstWholeSaleTertiaryStock: number;
  asLowAs: lowestPrices[];
  askDollars1: number;
  askDollars2: number;
  askDollars3: number;
  askDollars4: number;
  askDollars5: number;
  backOrderDiscountDivisor: number;
  backOrderWholeSalePremium: number;
  backorderPlanQty: number;
  backorderSoldQty: number;
  ceiling_Premium: number;
  childs: [];
  currentPrimaryStock: number;
  currentSecondaryStock: number;
  currentStockInHand: number;
  currentTertiaryStock: number;
  customerId: number;
  dgWareHouseStock: number;
  discount: number;
  discountType: string;
  dummyInventoryReduction: number;
  expectedShipByDate: string;
  expectedShipmentDate: string;
  fixedPrice: number;
  floor_Premium: number;
  fourthWareHouseShipmentDate: number;
  fourthWareHouseStock: number;
  imagePath: string;
  impairedDiscount: number;
  instockExpectedShipmentDateRange: string;
  isActive: boolean;
  isChild: boolean;
  isClearanceProduct: boolean;
  isGrouped: boolean;
  isImpairedQty: number;
  isPreSale: boolean;
  metal: string;
  metalId: number;
  ounces: number;
  parentProductId: number;
  price: number;
  priceType: number;
  primaryStockUpdateTS: string;
  productId: number;
  productInventorySource: string;
  productName: string;
  productNameWithHypen: string;
  qtyPlanned: number;
  qtySold: number;
  quantity: number;
  salesEventName: string;
  salesExpiryDate: string;
  secondaryStockUpdateTS: string;
  selected: boolean;
  shoppingCartId: number;
  sku: string | null;
  status: string | null;
  stocks: StocksInterface[];
  taxCode: string | null;
  taxStatus: string | null;
  tertiaryDummyInventoryReduction: number;
  tertiaryStockUpdateTS: string;
  tier1Max: number;
  tier1Min: number;
  tier2Max: number;
  tier2Min: number;
  tier3Max: number;
  tier3Min: number;
  tier4Max: number;
  tier4Min: number;
  tier5Max: number;
  tier5Min: number;
  wholeSale4thWarehouseStock: number;
  wholeSaleImapairedStock: number;
  wholeSalePremium: number;
  wholeSaleStock: number;
  wholeSaleTertiaryStock: number;
  wholeSaleUpdateTS: string | null;
  wholesaleFixedPriceDiscount: number;
  wholesaleImpairedDiscount: number;
  wholesaleTier1: number;
  totalPrice?: number;
  spot: ProductSpotInterface;
  size:number
}
export interface accessories {
  accessoryId: number;
  currentStockInHand: number;
  imagePath: string;
  name: string;
  productNameWithHypen: string;
  shortName: string;
  srNo: number;
}
export interface addToCartQueryInterface {
  customerId: number;
  productId: number;
  price: number;
  quantity: number;
  salesEventId: number;
  discount: number;
  productInventorySource: string;
}
export interface shoppingCartProducts {
  productId: number;
  price: number;
  quantity: number;
  activeSalesEventId: number;
  discount: number;
  productInventorySource: string;
  shoppingCartId: number;
  customerId: number;
}
export interface updateproductQuantityQuery {
  customerId: number;
  shoppingCartProducts: shoppingCartProducts[];
}
export interface cartCouponsInterface {
  isValid: boolean;
  couponId: number;
  currentBalance: number;
  couponCode: string;
  couponType: any;
  applicableProducts: number[];
  discountType: "%" | "$";
}
export interface ShoppingCartProductsRequest {
  productId: number;
  quantity: number;
  salesEventId: number;
  discount: number;
  stockSource: string;
  shoppingCartId: number;
  selected: boolean;
  sku: string;
  isActive: boolean;
  discountType: number;
  size: number
}
export interface GuestCartRequestInterface {
  shoppingCartProductsRequest: ShoppingCartProductsRequest[];
}

export interface watchlistInterface {
  watchlistId: number;
  activeSalesEventId: number;
  allocateAgainstWholesale: number;
  allocatedAgainst4thWareHouse: number;
  allocatedAgainst4thWarehouseStock: number;
  allocatedAgainstDGWarehouse: number;
  allocatedAgainstImpaired: number;
  allocatedAgainstInstock: number;
  allocatedAgainstTertiary: number;
  allocatedAgainstWholeSaleImpairedStock: number;
  allocatedAgainstWholeSaleTertiaryStock: number;
  asLowAs: lowestPrices[];
  askDollars1: number;
  askDollars2: number;
  askDollars3: number;
  askDollars4: number;
  askDollars5: number;
  backOrderDiscountDivisor: number;
  backOrderWholeSalePremium: number;
  backorderPlanQty: number;
  backorderSoldQty: number;
  ceiling_Premium: number;
  childs: [];
  currentPrimaryStock: number;
  currentSecondaryStock: number;
  currentStockInHand: number;
  currentTertiaryStock: number;
  customerId: number;
  dgWareHouseStock: number;
  discount: number;
  discountType: string;
  dummyInventoryReduction: number;
  expectedShipByDate: string;
  expectedShipmentDate: string;
  fixedPrice: number;
  floor_Premium: number;
  fourthWareHouseShipmentDate: string | number;
  fourthWareHouseStock: number;
  imagePath: string;
  impairedDiscount: number;
  instockExpectedShipmentDateRange: string;
  isActive: boolean;
  isChild: boolean;
  isClearanceProduct: boolean;
  isGrouped: boolean;
  isImpairedQty: number;
  isPreSale: boolean;
  metal: string;
  metalId: number;
  ounces: number;
  parentProductId: number | string;
  price: number;
  priceType: number;
  primaryStockUpdateTS: string;
  id: number;
  productInventorySource: string;
  name: string;
  productNameWithHypen: string;
  qtyPlanned: number;
  qtySold: number;
  quantity: number;
  salesEventName: string;
  salesExpiryDate: string;
  secondaryStockUpdateTS: string;
  shoppingCartId: number;
  sku: string | null;
  status: string | null;
  taxCode: string | null;
  taxStatus: string | null;
  tertiaryDummyInventoryReduction: number;
  tertiaryStockUpdateTS: string;
  tier1Max: number;
  tier1Min: number;
  tier2Max: number;
  tier2Min: number;
  tier3Max: number;
  tier3Min: number;
  tier4Max: number;
  tier4Min: number;
  tier5Max: number;
  tier5Min: number;
  wholeSale4thWarehouseStock: number;
  wholeSaleImapairedStock: number;
  wholeSalePremium: number;
  wholeSaleStock: number;
  wholeSaleTertiaryStock: number;
  wholeSaleUpdateTS: string | null;
  wholesaleFixedPriceDiscount: number;
  wholesaleImpairedDiscount: number;
  wholesaleTier1: number;
  selected: boolean;
  stocks: StocksInterface[];
  totalPrice: number;
  spot: ProductSpotInterface;
}
